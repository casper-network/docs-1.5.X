"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7137],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(n),m=s,u=d["".concat(c,".").concat(m)]||d[m]||h[m]||r;return n?a.createElement(u,i(i({ref:t},p),{},{components:n})):a.createElement(u,i({ref:t},p))}));function u(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[d]="string"==typeof e?e:s,i[1]=o;for(var l=2;l<r;l++)i[l]=n[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3157:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return d}});var a=n(7462),s=n(3366),r=(n(7294),n(3905)),i=["components"],o={title:"Interaction Workflow"},c="Interacting with the NFT Contract using the Rust Casper Client",l={unversionedId:"resources/tokens/cep78/using-casper-client/interacting-with-NFTs",id:"resources/tokens/cep78/using-casper-client/interacting-with-NFTs",title:"Interaction Workflow",description:"This document describes interacting with NFTs on a Casper network using the Rust command-line client.",source:"@site/source/docs/casper/resources/tokens/cep78/using-casper-client/interacting-with-NFTs.md",sourceDirName:"resources/tokens/cep78/using-casper-client",slug:"/resources/tokens/cep78/using-casper-client/interacting-with-NFTs",permalink:"/resources/tokens/cep78/using-casper-client/interacting-with-NFTs",draft:!1,editUrl:"https://github.com/casper-network/docs/tree/dev/source/docs/casper/resources/tokens/cep78/using-casper-client/interacting-with-NFTs.md",tags:[],version:"current",lastUpdatedAt:1721222364,formattedLastUpdatedAt:"Jul 17, 2024",frontMatter:{title:"Interaction Workflow"},sidebar:"resources",previous:{title:"Installation Workflow",permalink:"/resources/tokens/cep78/using-casper-client/full-installation-tutorial"},next:{title:"CEP-78 Contract Details",permalink:"/resources/tokens/cep78/using-casper-client/querying-NFTs"}},p={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Directly Invoking Entrypoints",id:"directly-invoking-entrypoints",level:2},{value:"Minting NFTs",id:"minting-nfts",level:2},{value:"Minting NFTs using Wasm",id:"minting-nfts-using-wasm",level:3},{value:"Transferring NFTs",id:"transferring-nfts",level:2},{value:"Transferring NFTs using Wasm",id:"transferring-nfts-using-wasm",level:3},{value:"Checking Balances",id:"checking-balances",level:2},{value:"Approving an Account",id:"approving-an-account",level:2},{value:"Burning NFTs",id:"burning-nfts",level:2},{value:"Next Steps",id:"next-steps",level:2}],h={toc:d},m="wrapper";function u(e){var t=e.components,n=(0,s.Z)(e,i);return(0,r.kt)(m,(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"interacting-with-the-nft-contract-using-the-rust-casper-client"},"Interacting with the NFT Contract using the Rust Casper Client"),(0,r.kt)("p",null,"This document describes interacting with NFTs on a Casper network using the Rust command-line client."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install the contract using the ",(0,r.kt)("a",{parentName:"li",href:"/resources/tokens/cep78/using-casper-client/quickstart-guide"},"Quickstart")," or the ",(0,r.kt)("a",{parentName:"li",href:"/resources/tokens/cep78/using-casper-client/full-installation-tutorial"},"Full Installation")," tutorials"),(0,r.kt)("li",{parentName:"ul"},"Learn to ",(0,r.kt)("a",{parentName:"li",href:"/resources/tokens/cep78/using-casper-client/querying-NFTs"},"Query NFT Contracts")," and save the various hashes and URefs required throughout this document")),(0,r.kt)("h2",{id:"table-of-contents"},"Table of Contents"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#directly-invoking-entrypoints"},"Directly Invoking Entrypoints"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#minting-nfts"},"Minting NFTs"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#transferring-nfts"},"Transferring NFTs"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#checking-balances"},"Checking Balances"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#approving-an-account"},"Approving an Account"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#burning-nfts"},"Burning NFTs"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#next-steps"},"Next Steps")))),(0,r.kt)("h2",{id:"directly-invoking-entrypoints"},"Directly Invoking Entrypoints"),(0,r.kt)("p",null,"With the release of CEP-78 version 1.1, users interacting with a CEP-78 contract that does not use ",(0,r.kt)("inlineCode",{parentName:"p"},"ReverseLookupMode")," should opt out of using the client Wasm files provided as part of the release. Opting out in this situation is recommended, as directly invoking the entrypoints incurs a lower gas cost than using the provided client Wasm to invoke the entrypoint."),(0,r.kt)("p",null,"You may invoke the ",(0,r.kt)("inlineCode",{parentName:"p"},"mint"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer"),", or ",(0,r.kt)("inlineCode",{parentName:"p"},"burn")," entrypoints directly through either the contract package hash or the contract hash directly."),(0,r.kt)("p",null,"In the case of ",(0,r.kt)("inlineCode",{parentName:"p"},"mint"),", fewer runtime arguments must be provided, thereby reducing the total gas cost of minting an NFT."),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Example `mint` using the stored package hash")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy --node-address http://localhost:11101/rpc/ \\\n--chain-name "casper-net-1\u201d \\\n--payment-amount 5000000000 \\\n--secret-key ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem \\\n--session-package-hash hash-2b61207cd0e94ce1b1d40801b0abb1ab55fd7dae94c9dcf670292243f3791a30 \\\n--session-entry-point "mint" \\\n--session-arg "token_owner:key=\'account-hash-e70dbca48c2d31bc2d754e51860ceaa8a1a49dc627b20320b0ecee1b6d9ce655\'" \\\n--session-arg "token_meta_data:string=\'{\\"name\\": \\"John Doe\\",\\"token_uri\\": \\"https:\\/\\/www.barfoo.com\\",\\"checksum\\": \\"940bffb3f2bba35f84313aa26da09ece3ad47045c6a1292c2bbd2df4ab1a55fb\\"}\'"\n'))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Example `transfer` using the stored contract hash")),(0,r.kt)("p",null,"Based on the identifier mode for the given contract instance, either the ",(0,r.kt)("inlineCode",{parentName:"p"},"token_id")," runtime argument must be passed in or, in the case of the hash identifier mode, the ",(0,r.kt)("inlineCode",{parentName:"p"},"token_hash")," runtime argument."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy --node-address http://localhost:11101/rpc/ \\\n--chain-name "casper-net-1\u201d \\\n--payment-amount 5000000000 \\\n--secret-key ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem \\\n--session-hash hash-378a43e38bc5129d8aa3bcd04f5c9a97be73f85b5be574182ac1346f04520796 \\\n--session-entry-point "transfer" \\\n--session-arg "source_key:key=\'account-hash-e70dbca48c2d31bc2d754e51860ceaa8a1a49dc627b20320b0ecee1b6d9ce655\'" \\\n--session-arg "target_key:key=\'account-hash-0ea7998b2822afe5b62b08a21d54c941ad791279b089f3f7ede0d72b477eca34\'" \\\n--session-arg "token_id:u64=\'0\'"\n'))),(0,r.kt)("h2",{id:"minting-nfts"},"Minting NFTs"),(0,r.kt)("p",null,"Below is an example of a ",(0,r.kt)("inlineCode",{parentName:"p"},"casper-client")," command that uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"mint")," entrypoint of the contract to mint an NFT for the user associated with ",(0,r.kt)("inlineCode",{parentName:"p"},"node-1")," in an ",(0,r.kt)("a",{parentName:"p",href:"/developers/dapps/nctl-test"},"NCTL environment"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" --payment-amount 5000000000 -k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem --session-entry-point "mint"'))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-package-hash hash-2b61207cd0e94ce1b1d40801b0abb1ab55fd7dae94c9dcf670292243f3791a30")),(0,r.kt)("p",{parentName:"li"},"The package hash of the previously installed CEP-78 NFT contract from which we will be minting.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"token_owner:key='account-hash-e9ff87766a1d2bab2565bfd5799054946200b51b20c3ca7e54a9269e00fe7cfb'\"")),(0,r.kt)("p",{parentName:"li"},"The collection name of the NFT to be minted.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'--session-arg "token_meta_data:string=\'{\\"name\\": \\"John Doe\\",\\"token_uri\\": \\"https:\\/\\/www.barfoo.com\\",\\"checksum\\": \\"940bffb3f2bba35f84313aa26da09ece3ad47045c6a1292c2bbd2df4ab1a55fb\\"}\'"')),(0,r.kt)("p",{parentName:"li"},"Metadata describing the NFT to be minted, passed in as a ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Casper client command without comments")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy --node-address http://localhost:11101/rpc/ \\\n--chain-name "casper-net-1\u201d \\\n--payment-amount 5000000000 \\\n--secret-key ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem \\\n--session-entry-point "mint" \\\n--session-package-hash hash-2b61207cd0e94ce1b1d40801b0abb1ab55fd7dae94c9dcf670292243f3791a30 \\\n--session-arg "token_owner:key=\'account-hash-e70dbca48c2d31bc2d754e51860ceaa8a1a49dc627b20320b0ecee1b6d9ce655\'" \\\n--session-arg "token_meta_data:string=\'{\\"name\\": \\"John Doe\\",\\"token_uri\\": \\"https:\\/\\/www.barfoo.com\\",\\"checksum\\": \\"940bffb3f2bba35f84313aa26da09ece3ad47045c6a1292c2bbd2df4ab1a55fb\\"}\'"\n'))),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"If the ",(0,r.kt)("inlineCode",{parentName:"p"},"identifier_mode")," was set to hash (1) during installation, the ",(0,r.kt)("inlineCode",{parentName:"p"},"token_hash")," runtime argument needs to be specified during minting. Since you already know the NFT's identifier, you can easily query the NFT's ",(0,r.kt)("inlineCode",{parentName:"p"},"meta_data"),", which is a very useful feature. This example uses an ordinal (0) ",(0,r.kt)("inlineCode",{parentName:"p"},"identifier_mode"),".")),(0,r.kt)("h3",{id:"minting-nfts-using-wasm"},"Minting NFTs using Wasm"),(0,r.kt)("p",null,"This example invokes the ",(0,r.kt)("inlineCode",{parentName:"p"},"mint_call.wasm")," session code provided in the ",(0,r.kt)("inlineCode",{parentName:"p"},"client")," folder."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" --payment-amount 5000000000 -k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem --session-path ~/casper/enhanced-nft/client/mint_session/target/wasm32-unknown-unknown/release/mint_call.wasm'))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"nft_contract_hash:key='hash-206339c3deb8e6146974125bb271eb510795be6f250c21b1bd4b698956669f95'\"")),(0,r.kt)("p",{parentName:"li"},"The contract hash of the previously installed CEP-78 NFT contract from which we will be minting.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"collection_name:string='cep78_<collection_name>'\"")),(0,r.kt)("p",{parentName:"li"},"The collection name of the previously installed CEP-78 NFT contract from which we will be minting.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"token_owner:key='account-hash-e9ff87766a1d2bab2565bfd5799054946200b51b20c3ca7e54a9269e00fe7cfb'\"")),(0,r.kt)("p",{parentName:"li"},"The collection name of the NFT to be minted.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'--session-arg "token_meta_data:string=\'{\\"name\\": \\"John Doe\\",\\"token_uri\\": \\"https:\\/\\/www.barfoo.com\\",\\"checksum\\": \\"940bffb3f2bba35f84313aa26da09ece3ad47045c6a1292c2bbd2df4ab1a55fb\\"}\'"')),(0,r.kt)("p",{parentName:"li"},"Metadata describing the NFT to be minted, passed in as a ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),"."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Casper client command without comments")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy --node-address http://localhost:11101/rpc/ \\\n--chain-name "casper-net-1\u201d \\\n--payment-amount 5000000000 \\\n--secret-key ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem \\\n--session-path ~/casper/enhanced-nft/client/mint_session/target/wasm32-unknown-unknown/release/mint_call.wasm \\\n--session-arg "nft_contract_hash:key=\'hash-206339c3deb8e6146974125bb271eb510795be6f250c21b1bd4b698956669f95\'" \\\n--session-arg "collection_name:string=\'cep78_<collection_name>\'" \\\n--session-arg "token_owner:key=\'account-hash-e9ff87766a1d2bab2565bfd5799054946200b51b20c3ca7e54a9269e00fe7cfb\'"  \\\n--session-arg "token_meta_data:string=\'{\\"name\\": \\"John Doe\\",\\"token_uri\\": \\"https:\\/\\/www.barfoo.com\\",\\"checksum\\": \\"940bffb3f2bba35f84313aa26da09ece3ad47045c6a1292c2bbd2df4ab1a55fb\\"}\'"\n'))),(0,r.kt)("h2",{id:"transferring-nfts"},"Transferring NFTs"),(0,r.kt)("p",null,"Below is an example of a ",(0,r.kt)("inlineCode",{parentName:"p"},"casper-client")," command that uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer")," entrypoint to transfer ownership of an NFT from one user to another."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" --payment-amount 5000000000 -k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem --session-entry-point "transfer"'))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-hash hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5'\"")),(0,r.kt)("p",{parentName:"li"},"The contract hash of the CEP-78 NFT Contract associated with the NFT to be transferred.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"source_key:key='account-hash-e9ff87766a1d2bab2565bfd5799054946200b51b20c3ca7e54a9269e00fe7cfb'\"")),(0,r.kt)("p",{parentName:"li"},"The account hash of the user that currently owns the NFT and wishes to transfer it.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"target_key:key='account-hash-b4772e7c47e4deca5bd90b7adb2d6e884f2d331825d5419d6cbfb59e17642aab'\"")),(0,r.kt)("p",{parentName:"li"},"The account hash of the user that will receive the NFT.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"is_hash_identifier_mode:bool='false'\"")),(0,r.kt)("p",{parentName:"li"},"The argument that the hash identifier mode is ordinal, thereby requiring a ",(0,r.kt)("inlineCode",{parentName:"p"},"token_id")," rather than a ",(0,r.kt)("inlineCode",{parentName:"p"},"token_hash"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"token_id:u64='0'\"")),(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"token_id")," of the NFT to be transferred."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Casper client command without comments")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" \\\n--payment-amount 5000000000 \\\n-k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem \\\n--session-entry-point "transfer" \\\n--session-hash hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5 \\\n--session-arg "source_key:key=\'account-hash-e9ff87766a1d2bab2565bfd5799054946200b51b20c3ca7e54a9269e00fe7cfb\'" \\\n--session-arg "target_key:key=\'account-hash-b4772e7c47e4deca5bd90b7adb2d6e884f2d331825d5419d6cbfb59e17642aab\'" \\\n--session-arg "is_hash_identifier_mode:bool=\'false\'" \\\n--session-arg "token_id:u64=\'0\'"\n'))),(0,r.kt)("p",null,"This command will return a deploy hash that you can query using ",(0,r.kt)("inlineCode",{parentName:"p"},"casper-client get-deploy"),". Querying the deploy allows you to verify execution success, but you will need to use the ",(0,r.kt)("inlineCode",{parentName:"p"},"balance_of")," entrypoint to verify the account's balance as shown ",(0,r.kt)("a",{parentName:"p",href:"#checking-the-balance"},"below"),"."),(0,r.kt)("h3",{id:"transferring-nfts-using-wasm"},"Transferring NFTs using Wasm"),(0,r.kt)("p",null,"This example uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer_call.wasm")," session code to transfer ownership of an NFT from one user to another."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" --payment-amount 5000000000 -k ~/secret_key.pem --session-path ~/casper/enhanced-nft/client/transfer_session/target/wasm32-unknown-unknown/release/transfer_call.wasm'))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"nft_contract_hash:key='hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5'\"")),(0,r.kt)("p",{parentName:"li"},"The contract hash of the CEP-78 NFT Contract associated with the NFT to be transferred.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"source_key:key='account-hash-e9ff87766a1d2bab2565bfd5799054946200b51b20c3ca7e54a9269e00fe7cfb'\"")),(0,r.kt)("p",{parentName:"li"},"The account hash of the user that currently owns the NFT and wishes to transfer it.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"target_key:key='account-hash-b4772e7c47e4deca5bd90b7adb2d6e884f2d331825d5419d6cbfb59e17642aab'\"")),(0,r.kt)("p",{parentName:"li"},"The account hash of the user that will receive the NFT.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"is_hash_identifier_mode:bool='false'\"")),(0,r.kt)("p",{parentName:"li"},"Argument that the hash identifier mode is ordinal, thereby requiring a ",(0,r.kt)("inlineCode",{parentName:"p"},"token_id")," rather than a ",(0,r.kt)("inlineCode",{parentName:"p"},"token_hash"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"token_id:u64='0'\"")),(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("inlineCode",{parentName:"p"},"token_id")," of the NFT to be transferred."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Casper client command without comments")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" \\\n--payment-amount 5000000000 \\\n-k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-2/keys/secret_key.pem \\\n--session-path ~/casper/enhanced-nft/client/transfer_session/target/wasm32-unknown-unknown/release/transfer_call.wasm \\\n--session-arg "nft_contract_hash:key=\'hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5\'" \\\n--session-arg "source_key:key=\'account-hash-e9ff87766a1d2bab2565bfd5799054946200b51b20c3ca7e54a9269e00fe7cfb\'" \\\n--session-arg "target_key:key=\'account-hash-b4772e7c47e4deca5bd90b7adb2d6e884f2d331825d5419d6cbfb59e17642aab\'" \\\n--session-arg "is_hash_identifier_mode:bool=\'false\'" \\\n--session-arg "token_id:u64=\'0\'"\n'))),(0,r.kt)("h2",{id:"checking-balances"},"Checking Balances"),(0,r.kt)("p",null,"To check an account's balance, get the latest state root hash and query the ",(0,r.kt)("inlineCode",{parentName:"p"},"balances"),' dictionary given the NFT contract hash and the owner\'s account hash without the "account-hash-" prefix, as shown below.'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"casper-client get-dictionary-item -n http://localhost:11101/rpc"))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--state-root-hash f22e8ecfb3d2700d5f902c83da456c32f130b73d0d35037fe89b2d4b4933673f")),(0,r.kt)("p",{parentName:"li"},"The latest state root hash.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--contract-hash hash-378a43e38bc5129d8aa3bcd04f5c9a97be73f85b5be574182ac1346f04520796")),(0,r.kt)("p",{parentName:"li"},"The NFT contract hash.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'--dictionary-name "balances"')),(0,r.kt)("p",{parentName:"li"},"The dictionary tracking the number of tokens for each account hash.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'--dictionary-item-key "0ea7998b2822afe5b62b08a21d54c941ad791279b089f3f7ede0d72b477eca34"')),(0,r.kt)("p",{parentName:"li"},"The account hash of the user whose token balance we are checking without the ",(0,r.kt)("inlineCode",{parentName:"p"},"account-hash-")," prefix."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Casper client commands without comments")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client get-state-root-hash --node-address https://rpc.testnet.casperlabs.io/\n\ncasper-client get-dictionary-item -n http://localhost:11101/rpc/ \\\n--state-root-hash f22e8ecfb3d2700d5f902c83da456c32f130b73d0d35037fe89b2d4b4933673f \\\n--contract-hash hash-378a43e38bc5129d8aa3bcd04f5c9a97be73f85b5be574182ac1346f04520796 \\\n--dictionary-name "balances" \\\n--dictionary-item-key "0ea7998b2822afe5b62b08a21d54c941ad791279b089f3f7ede0d72b477eca34"\n'))),(0,r.kt)("h2",{id:"approving-an-account"},"Approving an Account"),(0,r.kt)("p",null,"The Casper NFT contract features an ",(0,r.kt)("inlineCode",{parentName:"p"},"approve")," entrypoint, allowing another account to manage a specific token. During contract installation, the ",(0,r.kt)("inlineCode",{parentName:"p"},"ownership_mode")," must be set to 2, meaning ",(0,r.kt)("inlineCode",{parentName:"p"},"Transferable"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" --payment-amount 5000000000 -k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem --session-entry-point "approve"'))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-hash hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5")),(0,r.kt)("p",{parentName:"li"},"The contract hash of the previously installed CEP-78 NFT contract.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"spender:key='account-hash-17192017d32db5dc9f598bf8ac6ac35ee4b64748669b00572d88335941479513'\"")),(0,r.kt)("p",{parentName:"li"},"The hash of the account receiving the approval.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"token_id:u64='1'\"")),(0,r.kt)("p",{parentName:"li"},"The token ID of the approved NFT."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Casper client command without comments")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy -n http://localhost:11101/rpc/ \\\n--chain-name "casper-net-1" \\\n--payment-amount 5000000000 \\\n-k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem \\\n--session-entry-point "approve" \\\n--session-hash hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5 \\\n--session-arg "spender:key=\'account-hash-17192017d32db5dc9f598bf8ac6ac35ee4b64748669b00572d88335941479513\'" \\\n--session-arg "token_id:u64=\'1\'"\n'))),(0,r.kt)("h2",{id:"burning-nfts"},"Burning NFTs"),(0,r.kt)("p",null,"Below is an example of a ",(0,r.kt)("inlineCode",{parentName:"p"},"casper-client")," command that uses the ",(0,r.kt)("inlineCode",{parentName:"p"},"burn")," entrypoint to burn an NFT within a CEP-78 collection. If this command is used, the NFT in question will no longer be accessible by anyone."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" --payment-amount 5000000000 -k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem'))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-hash hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5")),(0,r.kt)("p",{parentName:"li"},"The session hash corresponding to the NFT's contract hash.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},'--session-entry-point "burn"')),(0,r.kt)("p",{parentName:"li"},"The entrypoint corresponding to the ",(0,r.kt)("inlineCode",{parentName:"p"},"burn")," function.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"--session-arg \"token_id:u64='1'\"")),(0,r.kt)("p",{parentName:"li"},"The token ID for the NFT to be burned. If the ",(0,r.kt)("inlineCode",{parentName:"p"},"identifier_mode")," is not set to ",(0,r.kt)("inlineCode",{parentName:"p"},"Ordinal"),", you must provide the ",(0,r.kt)("inlineCode",{parentName:"p"},"token_hash")," instead."))),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("b",null,"Casper client command without comments")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'casper-client put-deploy -n http://localhost:11101/rpc --chain-name "casper-net-1" \\\n--payment-amount 5000000000 \\\n-k ~/casper/casper-node/utils/nctl/assets/net-1/nodes/node-1/keys/secret_key.pem \\\n--session-hash hash-52e78ae3f6c485d036a74f65ebbb8c75fcc7c33fb42eb667fb32aeba72c63fb5 \\\n--session-entry-point "burn" \\\n--session-arg "token_id:u64=\'1\'"\n'))),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/resources/tokens/cep78/using-casper-client/testing-NFTs"},"Testing Framework for CEP-78"))))}u.isMDXComponent=!0}}]);