"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2031],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var a=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,s=function(e,t){if(null==e)return{};var r,a,s={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var o=a.createContext({}),i=function(e){var t=a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},l=function(e){var t=i(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=i(r),h=s,m=u["".concat(o,".").concat(h)]||u[h]||d[h]||n;return r?a.createElement(m,c(c({ref:t},l),{},{components:r})):a.createElement(m,c({ref:t},l))}));function m(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,c=new Array(n);c[0]=h;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[u]="string"==typeof e?e:s,c[1]=p;for(var i=2;i<n;i++)c[i]=r[i];return a.createElement.apply(null,c)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},9147:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return p},metadata:function(){return i},toc:function(){return u}});var a=r(7462),s=r(3366),n=(r(7294),r(3905)),c=["components"],p={},o="Essential Rust Crates",i={unversionedId:"developers/essential-crates",id:"developers/essential-crates",title:"Essential Rust Crates",description:"Several Rust crates are available on crates.io to support smart contract development with Rust. A crate is a compilation unit that can be compiled into a binary or a library. The corresponding documentation is published on docs.rs. The most important crates are listed below.",source:"@site/source/docs/casper/developers/essential-crates.md",sourceDirName:"developers",slug:"/developers/essential-crates",permalink:"/developers/essential-crates",draft:!1,editUrl:"https://github.com/casper-network/docs/tree/dev/source/docs/casper/developers/essential-crates.md",tags:[],version:"current",lastUpdatedAt:1722867856,formattedLastUpdatedAt:"Aug 5, 2024",frontMatter:{},sidebar:"developers",previous:{title:"Development Prerequisites",permalink:"/developers/prerequisites"},next:{title:"Introduction",permalink:"/writing-contracts"}},l={},u=[{value:"<code>casper-types</code>",id:"casper-types",level:2},{value:"<code>casper-contract</code>",id:"casper-contract",level:2},{value:"<code>casper-engine-test-support</code>",id:"casper-engine-test-support",level:2},{value:"<code>casper-node</code>",id:"casper-node",level:2},{value:"<code>casper-client</code>",id:"casper-client",level:2},{value:"<code>casper-event-standard</code>",id:"casper-event-standard",level:2},{value:"<code>casper-hashing</code>",id:"casper-hashing",level:2},{value:"<code>casper-wasm-utils</code>",id:"casper-wasm-utils",level:2},{value:"<code>cargo-casper</code>",id:"cargo-casper",level:2},{value:"Other Libraries",id:"other-libraries",level:2}],d={toc:u},h="wrapper";function m(e){var t=e.components,r=(0,s.Z)(e,c);return(0,n.kt)(h,(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"essential-rust-crates"},"Essential Rust Crates"),(0,n.kt)("p",null,"Several Rust crates are available on ",(0,n.kt)("a",{parentName:"p",href:"https://crates.io/"},"crates.io")," to support smart contract development with Rust. A crate is a compilation unit that can be compiled into a binary or a library. The corresponding documentation is published on ",(0,n.kt)("a",{parentName:"p",href:"https://docs.rs"},"docs.rs"),". The most important crates are listed below."),(0,n.kt)("h2",{id:"casper-types"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-types")),(0,n.kt)("p",null,"Types shared by many Casper crates:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-types"},"https://crates.io/crates/casper-types")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-types/latest"},"https://docs.rs/casper-types/latest"))),(0,n.kt)("h2",{id:"casper-contract"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-contract")),(0,n.kt)("p",null,"A library for developing Casper smart contracts:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-contract"},"https://crates.io/crates/casper-contract")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-contract/latest"},"https://docs.rs/casper-contract/latest"))),(0,n.kt)("h2",{id:"casper-engine-test-support"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-engine-test-support")),(0,n.kt)("p",null,"The Casper test support library:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-engine-test-support"},"https://crates.io/crates/casper-engine-test-support")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-engine-test-support/"},"https://docs.rs/casper-engine-test-support/"))),(0,n.kt)("h2",{id:"casper-node"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-node")),(0,n.kt)("p",null,"The component for running a node on a Casper network:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-node"},"https://crates.io/crates/casper-node")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-node/latest"},"https://docs.rs/casper-node/latest"))),(0,n.kt)("h2",{id:"casper-client"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-client")),(0,n.kt)("p",null,"A client library for interacting with a Casper network:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-client"},"https://crates.io/crates/casper-client")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-client/latest"},"https://docs.rs/casper-client/latest"))),(0,n.kt)("h2",{id:"casper-event-standard"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-event-standard")),(0,n.kt)("p",null,"A Rust library that provides a simple and standardized way for Casper contracts to emit events:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-event-standard"},"https://crates.io/crates/casper-event-standard")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-event-standard/latest"},"https://docs.rs/casper-event-standard/latest"))),(0,n.kt)("h2",{id:"casper-hashing"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-hashing")),(0,n.kt)("p",null,"A library providing hashing functionality including Merkle Proof utilities:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-hashing"},"https://crates.io/crates/casper-hashing")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-hashing/latest/"},"https://docs.rs/casper-hashing/latest/"))),(0,n.kt)("h2",{id:"casper-wasm-utils"},(0,n.kt)("inlineCode",{parentName:"h2"},"casper-wasm-utils")),(0,n.kt)("p",null,"Command-line utilities and corresponding Rust API for producing pwasm-compatible executables:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/casper-wasm-utils"},"https://crates.io/crates/casper-wasm-utils")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/casper-wasm-utils/latest"},"https://docs.rs/casper-wasm-utils/latest"))),(0,n.kt)("h2",{id:"cargo-casper"},(0,n.kt)("inlineCode",{parentName:"h2"},"cargo-casper")),(0,n.kt)("p",null,"A command line tool for creating a Wasm smart contract and tests:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://crates.io/crates/cargo-casper"},"https://crates.io/crates/cargo-casper")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.rs/crate/cargo-casper/latest"},"https://docs.rs/crate/cargo-casper/latest"))),(0,n.kt)("h2",{id:"other-libraries"},"Other Libraries"),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"/resources/build-on-casper/casper-open-source-software"},"Open-Source Software")," page provides other community-curated tools and libraries."))}m.isMDXComponent=!0}}]);